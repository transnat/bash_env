#!/usr/bin/env python3
# -*- coding:utf-8 -*-
# Name:         clock
# Author:       Casey Sparks
# Date:         January 25, 2022
# Description:
'''A simple CLI clock.'''

from argparse import Namespace, ArgumentParser
from datetime import datetime
from os import system
from sys import exit as sys_exit
from time import sleep


def get_arguments() -> Namespace:
    '''
    Get cmdline arguments.
        :return:    argparse.Namespace instance of user arguments.
        '''
    parser = ArgumentParser(description=__doc__)                                # Instantiate argument parser.

    parser.add_argument(                                                        # -12
        '-12',
        action='store_true',
        dest='twelve',
        help='Set format to 12hr time.',
        )

    arguments = parser.parse_args()

    return arguments


def run_clock(twelve_hour: bool = False) -> None:
    '''
    Continuously display a text-based clock.
        :param twelve_hour: Boolean indicating if clock should show twelve-hour time.
        '''
    assert isinstance(twelve_hour, bool), ':param twelve_hour: must be instance of bool().'

    time_string = '%I:%M:%S %p' if twelve_hour else '%H:%M:%S'
    div = '=' * len(time_string)

    while True:
        try:
            system('clear')                                                     # Clear screen.
            print(div)
            print(f'{datetime.now().strftime(time_string)}')
            print(div)
            sleep(1)                                                            # Sleep one second.

        except KeyboardInterrupt:                                               # Exit without stack trace.
            print()
            sys_exit(0)


if __name__ == '__main__':
    args = get_arguments()

    run_clock(args.twelve)
