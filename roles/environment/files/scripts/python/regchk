#!/usr/bin/env python3
# -*- coding:utf-8 -*-
# Name:         regchk
# Date:         August 03, 2023
# Author:       Casey Sparks
# Description:
'''CLI tool to quickly check regex expression against a string.'''

from argparse import ArgumentParser, Namespace
from locale import setlocale, LC_ALL
from re import search

setlocale(LC_ALL, 'en_US.UTF-8')                                            # Set locale.


def get_arguments(
    ) -> Namespace:
    '''
    Get cmdline arguments.
        :return:    argparse.Namespace instance of user arguments.
    '''
    parser = ArgumentParser(description=__doc__)                            # Instantiate argument parser.

    parser.add_argument(                                                    # expression
        'expression',
        type=str,
        help='The RegEx expression to test.'
        )
    parser.add_argument(                                                    # strings
        'strings',
        nargs='*',
        type=str,
        help='The string(s) to test. If zero strings are passed, regchk tests expression validity.'
        )

    return parser.parse_args()


def run_regex(
    expression: str,
    test_string: (str, None) = None
    ) -> None:
    '''
    Runs a regex expression against a string and prints if match.
        :param expression:  The regular expression to test.
        :param test_string: The string to test the regex against.
    '''
    assert isinstance(expression, str), '`expression` must be instance of str().'
    assert isinstance(test_string, (str, None)), '`test_str` must be instance of str() or None.'

    print(f'String "{test_string}": {search(expression, test_string)}')


if __name__ == '__main__':
    args = get_arguments()
    print((header:= f'Expression: "{args.expression}"'))
    print('=' * len(header))

    for string in args.strings:
        run_regex(args.expression, string)
