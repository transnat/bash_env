#!/usr/bin/env python3
# -*- coding:utf-8 -*-
# Author:       Casey Sparks
# Date:         March 20, 2023
# Description:
'''Run a simple local webserver.'''

from argparse import ArgumentParser, Namespace
from http import server
from locale import setlocale, LC_ALL
from socketserver import TCPServer
from sys import exit as sysexit

setlocale(LC_ALL, 'en_US.UTF-8')                                            # Set locale.


def get_arguments() -> Namespace:
    '''
    Get cmdline arguments.
        :return:    argparse.Namespace instance of user arguments.
        '''
    parser = ArgumentParser(description=__doc__)                            # Instantiate argument parser.

    parser.add_argument(                                                    # --port
        '--port', '-p',
        dest='port',
        type=int,
        default=8000,
        help='The port to run the webserver on. Default 8000',
        )

    return parser.parse_args()


def run_http_server(port: int = 8000) -> None:
    '''
    Run a simple HTTP server.
        :param port:    The port to run the server on.
        '''
    assert port >= 1024, '`port should be instance of int() in the non-reserved range of 1024-65535.'

    try:
        print('Instantiating HTTP server.')

        httpd = TCPServer(('', port), server.SimpleHTTPRequestHandler)

        print(f'HTTP server running on http://localhost:{port}')
        httpd.serve_forever()

    except KeyboardInterrupt:
        print('\nCaught keyboard interrupt. Exiting.')
        sysexit(1)


if __name__ == '__main__':
    run_http_server(get_arguments().port)
