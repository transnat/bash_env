---
- name: 'Purge Snap'
  when: "ansible_distribution == 'Ubuntu'"
  become: true
  tags:
      - 'snap'
  block:
      - name: 'Collect package facts'
        ansible.builtin.package_facts:
        register: 'packages_state'

      - name: 'Debug system packages facts'
        ansible.builtin.debug:
            var: '{{ packages_state.packages }}'
            verbosity: 3

      - name: 'Uninstall snap'
        when: '"snapd" in packages_state.packages'
        block:
            - name: 'Collect system service facts'
              ansible.builtin.service_facts:
              register: 'services_state'

            - name: 'Debug system service facts'
              ansible.builtin.debug:
                  var: '{{ services_state.services }}'
                  verbosity: 3

            - name: 'Stop, disable, and mask snapd system service'
              when: '"snapd.service" in services_state.ansible_facts.services'
              ansible.builtin.systemd_service:
                  name: 'snapd.service'
                  state: 'stopped'
                  enabled: false
                  masked: true

            - name: 'Uninstall snapd package'
              ansible.builtin.apt:
                  name: 'snapd'
                  state: 'absent'
                  purge: true
                  autoclean: true
                  autoremove: true
                  force: true

            - name: 'Hold snapd package in apt'
              ansible.builtin.dpkg_selections:
                  name: 'snapd'
                  selection: 'hold'

            - name: 'Prevent Snap installation via apt'
              ansible.builtin.copy:
                  dest: '/etc/apt/preferences.d/nosnap.pref'
                  force: true
                  owner: 'root'
                  group: 'root'
                  mode: '0644'
                  content: |
                      Package: snapd
                      Pin: release a=*
                      Pin-Priority: -10

            - name: 'Remove snap system directories'
              loop:
                  - '/snap/'
                  - '/var/lib/snapd/'
                  - '/var/snap/'
                  - '/root/snapd/'
              ansible.builtin.file:
                  name: '{{ item }}'
                  state: 'absent'

            - name: 'Update Apt cache'
              ansible.builtin.apt:
                  update_cache: true

      - name: 'Find snap directories in user homes'
        ansible.builtin.find:
            paths: '/home'
            depth: 2
            file_type: 'directory'
            recurse: true
            patterns: 'snap'
        register: 'user_snap_dirs'

      - name: 'Debug snap dirs'
        ansible.builtin.debug:
            var: '{{ user_snap_dirs }}'
            verbosity: 3

      - name: 'Remove all ~/snap directories'
        when: "user_snap_dirs.files | length > 0"
        ansible.builtin.file:
            path: '{{ item.path }}'
            state: 'absent'
        loop: '{{ user_snap_dirs.files }}'
...
