---
- name: '[fail2ban]'
  become: true
  tags: ['fail2ban']
  block:
    - name: '[fail2ban.install] Install fail2ban'
      when: "ansible_os_family == 'Debian'"
      tags: ['apt']
      ansible.builtin.apt:
        name: 'fail2ban'
        state: 'present'
        update_cache: true
        cache_valid_time: 3600

    - name: '[fail2ban.install] Install fail2ban'
      when: "ansible_os_family == 'RedHat'"
      tags: ['dnf']
      ansible.builtin.dnf:
        name: 'fail2ban'
        state: 'present'

    - name: '[fail2ban.install] Install fail2ban'
      when: "ansible_os_family == 'ArchLinux'"
      tags: ['pacman']
      community.general.pacman:
        name: 'fail2ban'
        state: 'present'

    - name: '[fail2ban.create_jail] Create /etc/fail2ban/jail.local'
      ansible.builtin.copy:
        src: '/etc/fail2ban/jail.conf'
        dest: '/etc/fail2ban/jail.local'
        owner: 'root'
        group: 'root'
        mode: '0644'

    - name: '[fail2ban.default_jail] Enable default jail'
      ansible.builtin.replace:
        path: '/etc/fail2ban/jail.local'
        after: '[DEFAULT]'
        regexp: '^enabled = false$'
        replace: 'enabled = true'

    - name: '[fail2ban.backend] Set systemd backend'
      ansible.builtin.replace:
        path: '/etc/fail2ban/jail.local'
        after: '[DEFAULT]'
        regexp: '^backend = .*$'
        replace: 'backend = systemd'

    - name: '[fail2ban.local_jail] Enable service jails'                        # Default configs.
      loop: '{{ security_fail2ban_services }}'
      ansible.builtin.lineinfile:
        path: '/etc/fail2ban/jail.local'
        insertafter: '[{{ item }}]'
        line: 'enabled = true'
      notify: '[handler] Enable fail2ban system service'
...
