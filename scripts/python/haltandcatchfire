#!/usr/bin/env python3
# -*- coding: utf-8 -*-
# Date:         December 14, 2022
# Description:
'''
Check an endpoint and wipe local user data.
Should be cron on sensitive systems.
'''

__author__ = 'Casey Sparks'

from locale import setlocale, LC_ALL
from logging import getLogger, StreamHandler, INFO
from os import getlogin
from pathlib import Path
from shutil import rmtree
from socket import gethostname
from typing import NoReturn
from requests import get


log = getLogger()                                                           # Instantiate logger.

setlocale(LC_ALL, 'en_US.UTF-8')                                            # Set locale.
log.addHandler(StreamHandler())                                             # Log to screen.
log.setLevel(INFO)                                                          # Set log level.


def remote_flag() -> bool:
    '''Checks remote for hostname match and returns true if true.'''
    try:
        flag = eval(get(
            f'https://raw.githubusercontent.com/caseysparkz/haltandcatchfire/main/{gethostname()}',
            timeout=5
        ).text.capitalize())

    except BaseException:
        flag = False

    log.debug(flag)

    return flag


def destroy_user_data() -> NoReturn:
    '''Wipe sensitive user data from disk.'''
    dir_list = [
        Path().home() / sub_dir
        for sub_dir
        in [
            'Documents',
            'Downloads',
            '.1password',
            '.aws',
            '.azure',
            '.azure',
            '.config',
            '.docker',
            '.env',
            '.google',
            '.kube',
            '.ssh',
            '.terraform.d',
            '.ykman'
        ]
    ]

    dir_list.extend([
        Path('/etc/wireguard'),
        Path(f'/var/spool/cron/{getlogin()}')
    ])

    for directory in dir_list:
        try:
            rmtree(directory)
            log.debug(f'Removed {directory}.')

        except BaseException:
            log.warning(f'Failed to remove {directory}.')


if __name__ == '__main__':
    if remote_flag():
        destroy_user_data()
